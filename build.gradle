plugins {
    id 'com.github.ben-manes.versions' version '0.39.0'
    id 'net.minecraftforge.gradleutils' version '2.+'
}
apply plugin: 'maven-publish'
apply plugin: 'java-library'
apply plugin: 'eclipse'

group 'net.minecraftforge'

version = gradleutils.getTagOffsetVersion()
logger.lifecycle('Version: ' + version);

ext.sharedManifest = manifest {
    attributes(['Specification-Title': 'unsafe',
                'Specification-Vendor': 'forge',
                'Specification-Version': '1',
                'Implementation-Title': project.name,
                'Implementation-Version': "${project.version}+${System.getenv('BUILD_NUMBER')?:0}+${gradleutils.gitInfo.branch}.${gradleutils.gitInfo.abbreviatedId}",
                'Implementation-Vendor' :'forge',
                'Implementation-Timestamp': java.time.Instant.now().toString(),
                'Git-Commit': gradleutils.gitInfo.abbreviatedId,
                'Git-Branch': gradleutils.gitInfo.branch,
                'Build-Number': "${System.getenv('BUILD_NUMBER')?:0}" ],
            'net/minecraftforge/fml/unsafe/')
}

jar {
    manifest = project.java.manifest {
        from sharedManifest
    }
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(8)
    withSourcesJar()
}

def javaVersionsToTest = [8, 11, 17]

def testTasks = javaVersionsToTest.collect(version -> {
    return task("testsOn$version", type: Test) {
        useJUnitPlatform()
        javaLauncher = javaToolchains.launcherFor {
            languageVersion = JavaLanguageVersion.of(version)
        }
        jvmArgs '-XX:+IgnoreUnrecognizedVMOptions'
        jvmArgs '--add-opens=java.base/sun.security.util=ALL-UNNAMED'
        jvmArgs '--add-opens=java.base/java.util.jar=ALL-UNNAMED'
    }
})

test {
    dependsOn(testTasks)
}

repositories {
    mavenCentral()
    maven {
        name = 'forge'
        url = 'https://maven.minecraftforge.net/'
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.+'
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

dependencyUpdates {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}

artifacts {
    archives jar
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'Unsafe'
                description = 'Unsafe hacks for forge'
                url = 'https://github.com/MinecraftForge/Unsafe'
                scm {
                    url = 'https://github.com/MinecraftForge/Unsafe'
                    connection = 'scm:git:git://github.com/MinecraftForge/Unsafe.git'
                    developerConnection = 'scm:git:git@github.com:MinecraftForge/Unsafe.git'
                }
                issueManagement {
                    system = 'github'
                    url = 'https://github.com/MinecraftForge/Unsafe/issues'
                }

                licenses {
                    license {
                        name = 'LGPLv2.1'
                    }
                }

                developers {
                    developer {
                        id = 'cpw'
                        name = 'cpw'
                    }
                }
            }
        }
    }
    repositories {
        maven gradleutils.getPublishingForgeMaven()
    }
}