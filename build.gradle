plugins {
    id 'com.github.ben-manes.versions' version '0.42.0'
    id 'net.minecraftforge.gradleutils' version '2.+'
    id 'maven-publish'
    id 'java-library'
    id 'eclipse'
    id 'jacoco'
}

group 'net.minecraftforge'
version = gradleutils.getTagOffsetVersion()
println('Version: ' + version)

java.toolchain.languageVersion = JavaLanguageVersion.of(8)

jacoco {
    toolVersion = '0.8.2'
}

test {
    useJUnitPlatform()
}

ext.sharedManifest = manifest {
    attributes(['Specification-Title': 'unsafe',
                'Specification-Vendor': 'Forge',
                'Specification-Version': '1', // Currently version 1 of the unsafe specification
                'Implementation-Title': project.name,
                'Implementation-Version': "${version}+${System.getenv("BUILD_NUMBER")?:0}+${gradleutils.gitInfo.abbreviatedId}",
                'Implementation-Vendor': 'Forge',
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'Git-Commit': gradleutils.gitInfo.abbreviatedId,
                'Git-Branch': gradleutils.gitInfo.branch ],
            'net/minecraftforge/fml/unsafe/')
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

repositories {
    mavenCentral()
    maven {
        name = 'forge'
        url = 'https://maven.minecraftforge.net/'
    }
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.3.+')
    testImplementation('org.powermock:powermock-core:2.0+')
    testRuntimeOnly('org.junit.jupiter:junit-jupiter-engine:5.3.+')
}

artifacts {
    archives jar
    archives sourcesJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar

            pom {
                name = 'Unsafe'
                description = 'Unsafe hacks for forge'
                url = 'https://github.com/MinecraftForge/Unsafe'
                scm {
                    url = 'https://github.com/MinecraftForge/Unsafe'
                    connection = 'scm:git:git://github.com/MinecraftForge/Unsafe.git'
                    developerConnection = 'scm:git:git@github.com:MinecraftForge/Unsafe.git'
                }
                issueManagement {
                    system = 'github'
                    url = 'https://github.com/MinecraftForge/Unsafe/issues'
                }

                licenses {
                    license {
                        name = 'LGPLv2.1'
                    }
                }

                developers {
                    developer {
                        id = 'cpw'
                        name = 'cpw'
                    }
                }
            }
        }
    }
    repositories {
        maven gradleutils.getPublishingForgeMaven()
    }
}